describe("command storage - custom storage",function(){describe("when providing a custom storage type as a constructor function to a Commands type",function(){var e,t;beforeEach(function(){t=function(){},_.extend(t,{addCommand:jasmine.createSpy("add command"),getCommands:jasmine.createSpy("get commands"),clearCommands:jasmine.createSpy("clear commands")});var n=Wreqr.Commands.extend({storageType:t});e=new n}),it("should instantiate and use that storage type",function(){expect(e.storage instanceof t).toBe(!0)})}),describe("when providing a custom storage type as an object literal to a Commands type",function(){var e,t;beforeEach(function(){t={addCommand:jasmine.createSpy("add command"),getCommands:jasmine.createSpy("get commands"),clearCommands:jasmine.createSpy("clear commands")};var n=Wreqr.Commands.extend({storageType:t});e=new n}),it("should instantiate and use that storage type",function(){expect(e.storage).toBe(t)})}),describe("when providing a custom storage type as a constructor function to a Commands instance",function(){var e,t;beforeEach(function(){t=function(){},_.extend(t,{addCommand:jasmine.createSpy("add command"),getCommands:jasmine.createSpy("get commands"),clearCommands:jasmine.createSpy("clear commands")}),e=new Wreqr.Commands({storageType:t})}),it("should instantiate and use that storage type",function(){expect(e.storage instanceof t).toBe(!0)})}),describe("when providing a custom storage type as an object literal to a Commands instance",function(){var e,t;beforeEach(function(){t={addCommand:jasmine.createSpy("add command"),getCommands:jasmine.createSpy("get commands"),clearCommands:jasmine.createSpy("clear commands")},e=new Wreqr.Commands({storageType:t})}),it("should instantiate and use that storage type",function(){expect(e.storage).toBe(t)})})});